pipeline:
  name: JavaDemo
  identifier: JavaDemo
  projectIdentifier: default_project
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: JaveDemo
        repoName: SpringJavaDemo
        build: <+input>
  stages:
    - stage:
        name: Build
        identifier: Build
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          caching:
            enabled: true
          buildIntelligence:
            enabled: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: Run
                  name: Maven Build
                  identifier: Run_1
                  spec:
                    shell: Sh
                    command: mvn clean verify install
    - stage:
        name: CheckDisk
        identifier: CheckDisk
        description: ""
        type: Custom
        spec:
          execution:
            steps:
              - step:
                  type: ShellScript
                  name: ShellScript_1
                  identifier: ShellScript_1
                  spec:
                    shell: Bash
                    executionTarget: {}
                    source:
                      type: Inline
                      spec:
                        script: |-
                          #!/bin/bash

                          # Get the disk usage percentage for the root filesystem ("/")
                          disk_usage=$(df / | grep / | awk '{ print $5 }' | sed 's/%//')

                          # Check if the disk usage is greater than or less than 70%
                          if [ "$disk_usage" -gt 70 ]; then
                            echo "Disk space is over 70%. Current usage: $disk_usage%"
                          elif [ "$disk_usage" -lt 70 ]; then
                            echo "Disk space is under 70%. Current usage: $disk_usage%"
                          else
                            echo "Disk space usage is exactly 70%."
                          fi
                    environmentVariables: []
                    outputVariables: []
                  timeout: 10m
              - step:
                  type: Email
                  name: Email_1
                  identifier: Email_1
                  spec:
                    to: srikanth.lahanday@opustechglobal.com
                    cc: ""
                    subject: disk space
                    body: disk space
                  timeout: 10m
        tags: {}
    - stage:
        name: Deploy
        identifier: Deploy
        description: ""
        type: Deployment
        spec:
          deploymentType: Ssh
          service:
            serviceRef: Testingfordeploy
            serviceInputs:
              serviceDefinition:
                type: Ssh
                spec:
                  artifacts:
                    primary:
                      primaryArtifactRef: <+input>
                      sources: <+input>
          environment:
            environmentRef: Jan
            deployToAll: false
            infrastructureDefinitions:
              - identifier: Jan
          execution:
            steps:
              - step:
                  type: Command
                  name: Command_1
                  identifier: Command_1
                  spec:
                    onDelegate: false
                    environmentVariables: []
                    outputVariables: []
                    commandUnits:
                      - identifier: deploy
                        name: deploy
                        type: DownloadArtifact
                        spec:
                          destinationPath: ./
                    delegateSelectors:
                      - casestudydockerdelegate
                  timeout: 10m
            rollbackSteps:
              - stepGroup:
                  name: Phase
                  identifier: Phase
                  strategy:
                    repeat:
                      items: <+stage.output.hosts>
                      maxConcurrency: 1
                      partitionSize: 1
                      unit: Count
                  steps:
                    - stepGroup:
                        name: Phase Group Rollback
                        identifier: phase_group_rollback
                        strategy:
                          repeat:
                            items: <+repeat.partition>
                        steps:
                          - step:
                              name: Rollback
                              identifier: Rollback
                              timeout: 10m
                              template:
                                templateRef: account.Default_Install_Jar_Bash
                                templateInputs:
                                  type: Command
                                  spec:
                                    environmentVariables:
                                      - name: DestinationDirectory
                                        type: String
                                        value: $HOME/<+service.name>/<+env.name>
                                      - name: WorkingDirectory
                                        type: String
                                        value: $HOME/<+service.name>/<+env.name>/tomcat/bin
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
